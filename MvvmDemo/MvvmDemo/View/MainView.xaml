<Window x:Class="MvvmDemo.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowStartupLocation="CenterScreen"
        Title="MVVM Demo" Height="300" Width="300">

    <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MaxWidth="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Column="0" Grid.Row="0" Text="Тип операції:" Margin="5"></TextBlock>
        <!--Нижче можна побачити приклад привязки даних. 
        Список айтемів, які мають бути в нашій випадайці буде витягуватися з колекцій OperationTypes, яка знаходиться в MainViewModel
        Вибраний айтем привязується до проперті CurrentOperationType з MainViewModel
        DisplayMemberPath="Description" вказує на те, яку пропертю обєкту OperationType слід показувати як текс айтема-->
        <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Path=OperationTypes}" SelectedItem="{Binding Path=CurrentOperationType}" DisplayMemberPath="Description" Margin="5"></ComboBox>

        <TextBlock Grid.Column="0" Grid.Row="1" Text="Операція:" Margin="5"></TextBlock>
        <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Path=Operations}" SelectedItem="{Binding Path=CurrentOperation}" DisplayMemberPath="Description" Margin="5"></ComboBox>

        <TextBlock Grid.Column="0" Grid.Row="2" Text="Операнд 1:" Margin="5"></TextBlock>
        <TextBox Grid.Column="1" Grid.Row="2"  Text="{Binding Path=FirstOperand}" Margin="5" KeyDown="UIElement_OnKeyDown"></TextBox>

        <TextBlock Grid.Column="0" Grid.Row="3" Text="Операнд 2:" Margin="5"></TextBlock>
        <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Path=SecondOperand}"  Margin="5" KeyDown="UIElement_OnKeyDown"></TextBox>
        
        <StackPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="5">
            <TextBlock Text="Результати:"></TextBlock>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Path=FirstOperand}"></TextBlock>
                <TextBlock Text="{Binding Path=CurrentOperation.Sign}"></TextBlock>
                <TextBlock Text="{Binding Path=SecondOperand}"></TextBlock>
                <TextBlock Text="="></TextBlock>
                <TextBlock Text="{Binding Path=CalculationResult}"></TextBlock>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom">
            <!--Тут ви бачите як працюють команди.
            Властивість Command в елементі Button відповідає за клік по кнопці. 
            Таким чином коли юзер натисне кнопку - автоматично викличеться команда CalculateCmd з MainViewModel-->
            <Button Content="Порахувати" Command="{Binding CalculateCmd}" HorizontalAlignment="Right" Margin="5" Padding="10, 5"></Button>
        </StackPanel>
    </Grid>

</Window>
